--- origin/YSFGateway/CRC.cpp	2017-10-04 22:39:49.284442841 +0800
+++ patched/YSFGateway/CRC.cpp	2017-10-04 22:43:16.576442841 +0800
@@ -60,26 +60,23 @@
 	0xEF1F, 0xFF3E, 0xCF5D, 0xDF7C, 0xAF9B, 0xBFBA, 0x8FD9, 0x9FF8,
 	0x6E17, 0x7E36, 0x4E55, 0x5E74, 0x2E93, 0x3EB2, 0x0ED1, 0x1EF0 };
 
+#define HI_BYTE(s) (s >> 8 & 0xff)
+#define LO_BYTE(s) (s & 0xff)
 
 void CCRC::addCCITT16(unsigned char *in, unsigned int length)
 {
 	assert(in != NULL);
 	assert(length > 2U);
 
-	union {
-		uint16_t crc16;
-		uint8_t  crc8[2U];
-	};
-
-	crc16 = 0U;
+	uint16_t crc16 = 0U;
 
 	for (unsigned i = 0U; i < (length - 2U); i++)
-		crc16 = (uint16_t(crc8[0U]) << 8) ^ CCITT16_TABLE2[crc8[1U] ^ in[i]];
+		crc16 = (uint16_t(LO_BYTE(crc16)) << 8) ^ CCITT16_TABLE2[HI_BYTE(crc16) ^ in[i]];
 
 	crc16 = ~crc16;
 
-	in[length - 1U] = crc8[0U];
-	in[length - 2U] = crc8[1U];
+	in[length - 1U] = LO_BYTE(crc16);
+	in[length - 2U] = HI_BYTE(crc16);
 }
 
 bool CCRC::checkCCITT16(const unsigned char *in, unsigned int length)
@@ -87,19 +84,14 @@
 	assert(in != NULL);
 	assert(length > 2U);
 
-	union {
-		uint16_t crc16;
-		uint8_t  crc8[2U];
-	};
-
-	crc16 = 0U;
+	uint16_t crc16 = 0U;
 
 	for (unsigned i = 0U; i < (length - 2U); i++)
-		crc16 = (uint16_t(crc8[0U]) << 8) ^ CCITT16_TABLE2[crc8[1U] ^ in[i]];
+		crc16 = (uint16_t(LO_BYTE(crc16)) << 8) ^ CCITT16_TABLE2[HI_BYTE(crc16) ^ in[i]];
 
 	crc16 = ~crc16;
 
-	return crc8[0U] == in[length - 1U] && crc8[1U] == in[length - 2U];
+	return LO_BYTE(crc16) == in[length - 1U] && HI_BYTE(crc16) == in[length - 2U];
 }
 
 unsigned char CCRC::addCRC(const unsigned char* in, unsigned int length)
@@ -112,4 +104,4 @@
 		crc += in[i];
 
 	return crc;
-}
\ No newline at end of file
+}
